# -*- coding: utf-8 -*-
"""Sadaqat Bahi result.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1byCi3jWzcGxMXQ6ZURyu4v6uBTjxrnid
"""

import pandas as pd
df.loc[df['Sentiment_Label'].str.lower() == 'neutral', 'Sentiment_Label'] = ''


df.to_csv('result_cleaned.csv', index=False)

print(df)

df = pd.read_csv('result.csv')

# 2. Normalize text (remove spaces, lowercase)
df['Polarity'] = df['Polarity'].str.strip().str.lower()
df['Original'] = df['Original'].str.strip().str.lower()

# 3. Create a mask: both positive or both negative
same_sentiment = (
    ((df['Polarity'] == 'positive') & (df['Original'] == 'positive')) |
    ((df['Polarity'] == 'negative') & (df['Original'] == 'negative'))
)

# 4. Calculate accuracy
accuracy = same_sentiment.mean()


total = len(df)
matched = same_sentiment.sum()
mismatched = total - matched

print(f"Total rows:       {total}")
print(f"Matching sentiment (pos-pos / neg-neg): {matched}")
print(f"Mismatched:       {mismatched}")
print(f"Accuracy:         {accuracy:.0%}")

matches = df['Polarity'] == df['Original']

# 3. Compute accuracy
accuracy = matches.mean()  # fraction of True values

# 4. (Optional) get counts
total = len(df)
num_matches = matches.sum()
num_mismatches = total - num_matches

print(f"Total rows:       {total}")
print(f"Matching rows:    {num_matches}")
print(f"Mismatching rows: {num_mismatches}")
print(f"Accuracy:         {accuracy:.0%}")  # <-- zero decimals, e.g. "40%"